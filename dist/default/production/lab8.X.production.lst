

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 23 15:49:10 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	nvBANK0
   216  002F                     __pnvBANK0:
   217  002F                     _var_tmr0:
   218  002F                     	ds	1
   219  0009                     _PORTE	set	9
   220  0008                     _PORTD	set	8
   221  0005                     _PORTA	set	5
   222  0001                     _TMR0	set	1
   223  000B                     _INTCONbits	set	11
   224  001E                     _ADRESH	set	30
   225  0007                     _PORTC	set	7
   226  001F                     _ADCON0bits	set	31
   227  000C                     _PIR1bits	set	12
   228  0081                     _OPTION_REGbits	set	129
   229  008C                     _PIE1bits	set	140
   230  009F                     _ADCON1bits	set	159
   231  008F                     _OSCCONbits	set	143
   232  0088                     _TRISD	set	136
   233  0089                     _TRISE	set	137
   234  0087                     _TRISC	set	135
   235  0085                     _TRISA	set	133
   236  0189                     _ANSELH	set	393
   237  0188                     _ANSEL	set	392
   238                           
   239                           	psect	cinit
   240  0011                     start_initialization:	
   241                           ; #config settings
   242                           
   243  0011                     __initialization:
   244                           
   245                           ; Clear objects allocated to COMMON
   246  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   247  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   248  0013  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK0
   251  0014  1283               	bcf	3,5	;RP0=0, select bank0
   252  0015  1303               	bcf	3,6	;RP1=0, select bank0
   253  0016  01AC               	clrf	__pbssBANK0& (0+127)
   254  0017  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   255  0018  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   256  0019                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  0019                     __end_of__initialization:
   260  0019  0183               	clrf	3
   261  001A  120A  118A  2A07   	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssCOMMON
   264  007B                     __pbssCOMMON:
   265  007B                     _centenas:
   266  007B                     	ds	1
   267  007C                     _decenas:
   268  007C                     	ds	1
   269  007D                     _unidades:
   270  007D                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  002C                     __pbssBANK0:
   274  002C                     _operacion:
   275  002C                     	ds	1
   276  002D                     _numero:
   277  002D                     	ds	1
   278  002E                     _bandera:
   279  002E                     	ds	1
   280                           
   281                           	psect	cstackCOMMON
   282  0070                     __pcstackCOMMON:
   283  0070                     ?_multi:
   284  0070                     ?_setup:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_convertir:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_Tabla:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ??_Tabla:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_isr:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  0070                     	ds	2
   305  0072                     Tabla@numero7:
   306                           
   307                           ; 1 bytes @ 0x2
   308  0072                     	ds	1
   309  0073                     Tabla@seg:
   310                           
   311                           ; 1 bytes @ 0x3
   312  0073                     	ds	1
   313  0074                     Tabla@valor:
   314                           
   315                           ; 1 bytes @ 0x4
   316  0074                     	ds	1
   317  0075                     ??_multi:
   318                           
   319                           ; 1 bytes @ 0x5
   320  0075                     	ds	2
   321  0077                     ??_isr:
   322                           
   323                           ; 1 bytes @ 0x7
   324  0077                     	ds	4
   325                           
   326                           	psect	cstackBANK0
   327  0020                     __pcstackBANK0:
   328  0020                     ??_setup:
   329  0020                     ?___bmul:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0020                     ?___awdiv:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0020                     ___bmul@multiplicand:	
   336                           ; 2 bytes @ 0x0
   337                           
   338  0020                     ___awdiv@divisor:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 2 bytes @ 0x0
   343  0020                     	ds	1
   344  0021                     ??___bmul:
   345                           
   346                           ; 1 bytes @ 0x1
   347  0021                     	ds	1
   348  0022                     ___bmul@product:
   349  0022                     ___awdiv@dividend:	
   350                           ; 1 bytes @ 0x2
   351                           
   352                           
   353                           ; 2 bytes @ 0x2
   354  0022                     	ds	1
   355  0023                     ___bmul@multiplier:
   356                           
   357                           ; 1 bytes @ 0x3
   358  0023                     	ds	1
   359  0024                     ??___awdiv:
   360                           
   361                           ; 1 bytes @ 0x4
   362  0024                     	ds	1
   363  0025                     ___awdiv@counter:
   364                           
   365                           ; 1 bytes @ 0x5
   366  0025                     	ds	1
   367  0026                     ___awdiv@sign:
   368                           
   369                           ; 1 bytes @ 0x6
   370  0026                     	ds	1
   371  0027                     ___awdiv@quotient:
   372                           
   373                           ; 2 bytes @ 0x7
   374  0027                     	ds	2
   375  0029                     ??_convertir:
   376                           
   377                           ; 1 bytes @ 0x9
   378  0029                     	ds	2
   379  002B                     ??_main:
   380                           
   381                           ; 1 bytes @ 0xB
   382  002B                     	ds	1
   383                           
   384                           	psect	maintext
   385  0207                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 80 in file "mainlab8.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       1       0       0       0
   408 ;;      Totals:         0       1       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels required when called: 5
   411 ;; This function calls:
   412 ;;		_convertir
   413 ;;		_setup
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419  0207                     _main:	
   420                           ;psect for function _main
   421                           
   422  0207                     l1189:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;mainlab8.c: 81:     setup();
   428  0207  120A  118A  2118  120A  118A  	fcall	_setup
   429  020C                     l1191:
   430                           
   431                           ;mainlab8.c: 83:         if(ADCON0bits.GO == 0){
   432  020C  1283               	bcf	3,5	;RP0=0, select bank0
   433  020D  1303               	bcf	3,6	;RP1=0, select bank0
   434  020E  189F               	btfsc	31,1	;volatile
   435  020F  2A11               	goto	u361
   436  0210  2A12               	goto	u360
   437  0211                     u361:
   438  0211  2A35               	goto	l1205
   439  0212                     u360:
   440  0212                     l1193:
   441                           
   442                           ;mainlab8.c: 85:             if(ADCON0bits.CHS == 0b0000)
   443  0212  0C1F               	rrf	31,w	;volatile
   444  0213  00AB               	movwf	??_main
   445  0214  0C2B               	rrf	??_main,w
   446  0215  390F               	andlw	15
   447  0216  3A00               	xorlw	0
   448  0217  1D03               	skipz
   449  0218  2A1A               	goto	u371
   450  0219  2A1B               	goto	u370
   451  021A                     u371:
   452  021A  2A20               	goto	l1197
   453  021B                     u370:
   454  021B                     l1195:
   455                           
   456                           ;mainlab8.c: 86:                 ADCON0bits.CHS = 0b0001;
   457  021B  081F               	movf	31,w	;volatile
   458  021C  39C3               	andlw	-61
   459  021D  3804               	iorlw	4
   460  021E  009F               	movwf	31	;volatile
   461  021F  2A2B               	goto	l1201
   462  0220                     l1197:
   463  0220  0C1F               	rrf	31,w	;volatile
   464  0221  00AB               	movwf	??_main
   465  0222  0C2B               	rrf	??_main,w
   466  0223  390F               	andlw	15
   467  0224  3A01               	xorlw	1
   468  0225  1D03               	skipz
   469  0226  2A28               	goto	u381
   470  0227  2A29               	goto	u380
   471  0228                     u381:
   472  0228  2A2B               	goto	l1201
   473  0229                     u380:
   474  0229                     l1199:
   475                           
   476                           ;mainlab8.c: 88:                 ADCON0bits.CHS = 0b0000;
   477  0229  30C3               	movlw	-61
   478  022A  059F               	andwf	31,f	;volatile
   479  022B                     l1201:
   480                           
   481                           ;mainlab8.c: 89:             _delay((unsigned long)((40)*(4000000/4000000.0)));
   482  022B  300C               	movlw	12
   483  022C  1283               	bcf	3,5	;RP0=0, select bank0
   484  022D  1303               	bcf	3,6	;RP1=0, select bank0
   485  022E  00AB               	movwf	??_main
   486  022F                     u397:
   487  022F  0BAB               	decfsz	??_main,f
   488  0230  2A2F               	goto	u397
   489  0231  0000               	nop
   490  0232                     l1203:
   491                           
   492                           ;mainlab8.c: 91:             ADCON0bits.GO = 1;
   493  0232  1283               	bcf	3,5	;RP0=0, select bank0
   494  0233  1303               	bcf	3,6	;RP1=0, select bank0
   495  0234  149F               	bsf	31,1	;volatile
   496  0235                     l1205:
   497                           
   498                           ;mainlab8.c: 93:         convertir();
   499  0235  120A  118A  21BC  120A  118A  	fcall	_convertir
   500  023A  2A0C               	goto	l1191
   501  023B  120A  118A  280E   	ljmp	start
   502  023E                     __end_of_main:
   503                           
   504                           	psect	text1
   505  0118                     __ptext1:	
   506 ;; *************** function _setup *****************
   507 ;; Defined at:
   508 ;;		line 101 in file "mainlab8.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   522 ;;      Params:         0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0
   524 ;;      Temps:          0       1       0       0       0
   525 ;;      Totals:         0       1       0       0       0
   526 ;;Total ram usage:        1 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 3
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536  0118                     _setup:	
   537                           ;psect for function _setup
   538                           
   539  0118                     l1119:	
   540                           ;incstack = 0
   541                           ; Regs used in _setup: [wreg+status,2+status,0]
   542                           
   543                           
   544                           ;mainlab8.c: 102:     var_tmr0 = 248;
   545  0118  30F8               	movlw	248
   546  0119  1283               	bcf	3,5	;RP0=0, select bank0
   547  011A  1303               	bcf	3,6	;RP1=0, select bank0
   548  011B  00A0               	movwf	??_setup
   549  011C  0820               	movf	??_setup,w
   550  011D  00AF               	movwf	_var_tmr0
   551                           
   552                           ;mainlab8.c: 103:     ANSEL = 0b00000011;
   553  011E  3003               	movlw	3
   554  011F  1683               	bsf	3,5	;RP0=1, select bank3
   555  0120  1703               	bsf	3,6	;RP1=1, select bank3
   556  0121  0088               	movwf	8	;volatile
   557  0122                     l1121:
   558                           
   559                           ;mainlab8.c: 104:     ANSELH = 0;
   560  0122  0189               	clrf	9	;volatile
   561  0123                     l1123:
   562                           
   563                           ;mainlab8.c: 108:     TRISA = 0b00000011;
   564  0123  3003               	movlw	3
   565  0124  1683               	bsf	3,5	;RP0=1, select bank1
   566  0125  1303               	bcf	3,6	;RP1=0, select bank1
   567  0126  0085               	movwf	5	;volatile
   568                           
   569                           ;mainlab8.c: 110:     PORTA = 0;
   570  0127  1283               	bcf	3,5	;RP0=0, select bank0
   571  0128  1303               	bcf	3,6	;RP1=0, select bank0
   572  0129  0185               	clrf	5	;volatile
   573                           
   574                           ;mainlab8.c: 112:     TRISC = 0;
   575  012A  1683               	bsf	3,5	;RP0=1, select bank1
   576  012B  1303               	bcf	3,6	;RP1=0, select bank1
   577  012C  0187               	clrf	7	;volatile
   578                           
   579                           ;mainlab8.c: 113:     TRISE = 0x00;
   580  012D  0189               	clrf	9	;volatile
   581                           
   582                           ;mainlab8.c: 114:     PORTC = 0;
   583  012E  1283               	bcf	3,5	;RP0=0, select bank0
   584  012F  1303               	bcf	3,6	;RP1=0, select bank0
   585  0130  0187               	clrf	7	;volatile
   586                           
   587                           ;mainlab8.c: 115:     TRISD = 0;
   588  0131  1683               	bsf	3,5	;RP0=1, select bank1
   589  0132  1303               	bcf	3,6	;RP1=0, select bank1
   590  0133  0188               	clrf	8	;volatile
   591                           
   592                           ;mainlab8.c: 116:     PORTD = 0;
   593  0134  1283               	bcf	3,5	;RP0=0, select bank0
   594  0135  1303               	bcf	3,6	;RP1=0, select bank0
   595  0136  0188               	clrf	8	;volatile
   596                           
   597                           ;mainlab8.c: 117:     PORTE = 0;
   598  0137  0189               	clrf	9	;volatile
   599  0138                     l1125:
   600                           
   601                           ;mainlab8.c: 120:     OSCCONbits.IRCF = 0b0110;
   602  0138  1683               	bsf	3,5	;RP0=1, select bank1
   603  0139  1303               	bcf	3,6	;RP1=0, select bank1
   604  013A  080F               	movf	15,w	;volatile
   605  013B  398F               	andlw	-113
   606  013C  3860               	iorlw	96
   607  013D  008F               	movwf	15	;volatile
   608  013E                     l1127:
   609                           
   610                           ;mainlab8.c: 121:     OSCCONbits.SCS = 1;
   611  013E  140F               	bsf	15,0	;volatile
   612  013F                     l1129:
   613                           
   614                           ;mainlab8.c: 124:     ADCON0bits.ADCS = 0b01;
   615  013F  1283               	bcf	3,5	;RP0=0, select bank0
   616  0140  1303               	bcf	3,6	;RP1=0, select bank0
   617  0141  081F               	movf	31,w	;volatile
   618  0142  393F               	andlw	-193
   619  0143  3840               	iorlw	64
   620  0144  009F               	movwf	31	;volatile
   621  0145                     l1131:
   622                           
   623                           ;mainlab8.c: 125:     ADCON1bits.VCFG0 = 0;
   624  0145  1683               	bsf	3,5	;RP0=1, select bank1
   625  0146  1303               	bcf	3,6	;RP1=0, select bank1
   626  0147  121F               	bcf	31,4	;volatile
   627  0148                     l1133:
   628                           
   629                           ;mainlab8.c: 126:     ADCON1bits.VCFG1 = 0;
   630  0148  129F               	bcf	31,5	;volatile
   631  0149                     l1135:
   632                           
   633                           ;mainlab8.c: 127:     ADCON0bits.CHS = 0b0000;
   634  0149  30C3               	movlw	-61
   635  014A  1283               	bcf	3,5	;RP0=0, select bank0
   636  014B  1303               	bcf	3,6	;RP1=0, select bank0
   637  014C  059F               	andwf	31,f	;volatile
   638  014D                     l1137:
   639                           
   640                           ;mainlab8.c: 128:     ADCON1bits.ADFM = 0;
   641  014D  1683               	bsf	3,5	;RP0=1, select bank1
   642  014E  1303               	bcf	3,6	;RP1=0, select bank1
   643  014F  139F               	bcf	31,7	;volatile
   644  0150                     l1139:
   645                           
   646                           ;mainlab8.c: 129:     ADCON0bits.ADON = 1;
   647  0150  1283               	bcf	3,5	;RP0=0, select bank0
   648  0151  1303               	bcf	3,6	;RP1=0, select bank0
   649  0152  141F               	bsf	31,0	;volatile
   650  0153                     l1141:
   651                           
   652                           ;mainlab8.c: 130:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   653  0153  300C               	movlw	12
   654  0154  1283               	bcf	3,5	;RP0=0, select bank0
   655  0155  1303               	bcf	3,6	;RP1=0, select bank0
   656  0156  00A0               	movwf	??_setup
   657  0157                     u407:
   658  0157  0BA0               	decfsz	??_setup,f
   659  0158  2957               	goto	u407
   660  0159  0000               	nop
   661  015A                     l1143:
   662                           
   663                           ;mainlab8.c: 133:     PIR1bits.ADIF = 0;
   664  015A  1283               	bcf	3,5	;RP0=0, select bank0
   665  015B  1303               	bcf	3,6	;RP1=0, select bank0
   666  015C  130C               	bcf	12,6	;volatile
   667  015D                     l1145:
   668                           
   669                           ;mainlab8.c: 134:     PIE1bits.ADIE = 1;
   670  015D  1683               	bsf	3,5	;RP0=1, select bank1
   671  015E  1303               	bcf	3,6	;RP1=0, select bank1
   672  015F  170C               	bsf	12,6	;volatile
   673  0160                     l1147:
   674                           
   675                           ;mainlab8.c: 135:     INTCONbits.PEIE = 1;
   676  0160  170B               	bsf	11,6	;volatile
   677  0161                     l1149:
   678                           
   679                           ;mainlab8.c: 136:     INTCONbits.GIE = 1;
   680  0161  178B               	bsf	11,7	;volatile
   681  0162                     l1151:
   682                           
   683                           ;mainlab8.c: 137:     INTCONbits.T0IF = 0;
   684  0162  110B               	bcf	11,2	;volatile
   685  0163                     l1153:
   686                           
   687                           ;mainlab8.c: 140:     OPTION_REGbits.T0CS = 0;
   688  0163  1281               	bcf	1,5	;volatile
   689  0164                     l1155:
   690                           
   691                           ;mainlab8.c: 141:     OPTION_REGbits.PSA = 0;
   692  0164  1181               	bcf	1,3	;volatile
   693  0165                     l1157:
   694                           
   695                           ;mainlab8.c: 142:     OPTION_REGbits.PS2 = 1;
   696  0165  1501               	bsf	1,2	;volatile
   697  0166                     l1159:
   698                           
   699                           ;mainlab8.c: 143:     OPTION_REGbits.PS1 = 1;
   700  0166  1481               	bsf	1,1	;volatile
   701  0167                     l1161:
   702                           
   703                           ;mainlab8.c: 144:     OPTION_REGbits.PS0 = 1;
   704  0167  1401               	bsf	1,0	;volatile
   705  0168                     l1163:
   706                           
   707                           ;mainlab8.c: 145:     TMR0 = var_tmr0;
   708  0168  1283               	bcf	3,5	;RP0=0, select bank0
   709  0169  1303               	bcf	3,6	;RP1=0, select bank0
   710  016A  082F               	movf	_var_tmr0,w
   711  016B  0081               	movwf	1	;volatile
   712  016C                     l87:
   713  016C  0008               	return
   714  016D                     __end_of_setup:
   715                           
   716                           	psect	text2
   717  01BC                     __ptext2:	
   718 ;; *************** function _convertir *****************
   719 ;; Defined at:
   720 ;;		line 232 in file "mainlab8.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          0       2       0       0       0
   737 ;;      Totals:         0       2       0       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels used: 1
   740 ;; Hardware stack levels required when called: 4
   741 ;; This function calls:
   742 ;;		___awdiv
   743 ;;		___bmul
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749  01BC                     _convertir:	
   750                           ;psect for function _convertir
   751                           
   752  01BC                     l1165:	
   753                           ;incstack = 0
   754                           ; Regs used in _convertir: [wreg+status,2+status,0+pclath+cstack]
   755                           
   756                           
   757                           ;mainlab8.c: 233:     centenas = numero / 100;
   758  01BC  3064               	movlw	100
   759  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   760  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   761  01BF  00A0               	movwf	___awdiv@divisor
   762  01C0  3000               	movlw	0
   763  01C1  00A1               	movwf	___awdiv@divisor+1
   764  01C2  082D               	movf	_numero,w
   765  01C3  00A2               	movwf	___awdiv@dividend
   766  01C4  01A3               	clrf	___awdiv@dividend+1
   767  01C5  1BA2               	btfsc	___awdiv@dividend,7
   768  01C6  03A3               	decf	___awdiv@dividend+1,f
   769  01C7  120A  118A  20AF  120A  118A  	fcall	___awdiv
   770  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   771  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   772  01CE  0820               	movf	?___awdiv,w
   773  01CF  00A9               	movwf	??_convertir
   774  01D0  0829               	movf	??_convertir,w
   775  01D1  00FB               	movwf	_centenas
   776                           
   777                           ;mainlab8.c: 234:     numero = numero - (centenas*100);
   778  01D2  309C               	movlw	156
   779  01D3  00A9               	movwf	??_convertir
   780  01D4  0829               	movf	??_convertir,w
   781  01D5  00A0               	movwf	___bmul@multiplicand
   782  01D6  087B               	movf	_centenas,w
   783  01D7  120A  118A  2275  120A  118A  	fcall	___bmul
   784  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   785  01DD  1303               	bcf	3,6	;RP1=0, select bank0
   786  01DE  072D               	addwf	_numero,w
   787  01DF  00AA               	movwf	??_convertir+1
   788  01E0  082A               	movf	??_convertir+1,w
   789  01E1  00AD               	movwf	_numero
   790                           
   791                           ;mainlab8.c: 235:     decenas = numero / 10;
   792  01E2  300A               	movlw	10
   793  01E3  00A0               	movwf	___awdiv@divisor
   794  01E4  3000               	movlw	0
   795  01E5  00A1               	movwf	___awdiv@divisor+1
   796  01E6  082D               	movf	_numero,w
   797  01E7  00A2               	movwf	___awdiv@dividend
   798  01E8  01A3               	clrf	___awdiv@dividend+1
   799  01E9  1BA2               	btfsc	___awdiv@dividend,7
   800  01EA  03A3               	decf	___awdiv@dividend+1,f
   801  01EB  120A  118A  20AF  120A  118A  	fcall	___awdiv
   802  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   803  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   804  01F2  0820               	movf	?___awdiv,w
   805  01F3  00A9               	movwf	??_convertir
   806  01F4  0829               	movf	??_convertir,w
   807  01F5  00FC               	movwf	_decenas
   808                           
   809                           ;mainlab8.c: 236:     unidades = numero - (decenas*10);
   810  01F6  30F6               	movlw	246
   811  01F7  00A9               	movwf	??_convertir
   812  01F8  0829               	movf	??_convertir,w
   813  01F9  00A0               	movwf	___bmul@multiplicand
   814  01FA  087C               	movf	_decenas,w
   815  01FB  120A  118A  2275  120A  118A  	fcall	___bmul
   816  0200  1283               	bcf	3,5	;RP0=0, select bank0
   817  0201  1303               	bcf	3,6	;RP1=0, select bank0
   818  0202  072D               	addwf	_numero,w
   819  0203  00AA               	movwf	??_convertir+1
   820  0204  082A               	movf	??_convertir+1,w
   821  0205  00FD               	movwf	_unidades
   822  0206                     l119:
   823  0206  0008               	return
   824  0207                     __end_of_convertir:
   825                           
   826                           	psect	text3
   827  0275                     __ptext3:	
   828 ;; *************** function ___bmul *****************
   829 ;; Defined at:
   830 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  multiplier      1    wreg     unsigned char 
   833 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  multiplier      1    3[BANK0 ] unsigned char 
   836 ;;  product         1    2[BANK0 ] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      unsigned char 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       1       0       0       0
   847 ;;      Locals:         0       2       0       0       0
   848 ;;      Temps:          0       1       0       0       0
   849 ;;      Totals:         0       4       0       0       0
   850 ;;Total ram usage:        4 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; Hardware stack levels required when called: 3
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_convertir
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860  0275                     ___bmul:	
   861                           ;psect for function ___bmul
   862                           
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   866                           ;___bmul@multiplier stored from wreg
   867  0275  1283               	bcf	3,5	;RP0=0, select bank0
   868  0276  1303               	bcf	3,6	;RP1=0, select bank0
   869  0277  00A3               	movwf	___bmul@multiplier
   870  0278                     l1025:
   871  0278  01A2               	clrf	___bmul@product
   872  0279                     l1027:
   873  0279  1C23               	btfss	___bmul@multiplier,0
   874  027A  2A7C               	goto	u201
   875  027B  2A7D               	goto	u200
   876  027C                     u201:
   877  027C  2A81               	goto	l1031
   878  027D                     u200:
   879  027D                     l1029:
   880  027D  0820               	movf	___bmul@multiplicand,w
   881  027E  00A1               	movwf	??___bmul
   882  027F  0821               	movf	??___bmul,w
   883  0280  07A2               	addwf	___bmul@product,f
   884  0281                     l1031:
   885  0281  1003               	clrc
   886  0282  0DA0               	rlf	___bmul@multiplicand,f
   887  0283                     l1033:
   888  0283  1003               	clrc
   889  0284  0CA3               	rrf	___bmul@multiplier,f
   890  0285  0823               	movf	___bmul@multiplier,w
   891  0286  1D03               	btfss	3,2
   892  0287  2A89               	goto	u211
   893  0288  2A8A               	goto	u210
   894  0289                     u211:
   895  0289  2A79               	goto	l1027
   896  028A                     u210:
   897  028A                     l1035:
   898  028A  0822               	movf	___bmul@product,w
   899  028B                     l231:
   900  028B  0008               	return
   901  028C                     __end_of___bmul:
   902                           
   903                           	psect	text4
   904  00AF                     __ptext4:	
   905 ;; *************** function ___awdiv *****************
   906 ;; Defined at:
   907 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  divisor         2    0[BANK0 ] int 
   910 ;;  dividend        2    2[BANK0 ] int 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  quotient        2    7[BANK0 ] int 
   913 ;;  sign            1    6[BANK0 ] unsigned char 
   914 ;;  counter         1    5[BANK0 ] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  2    0[BANK0 ] int 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       4       0       0       0
   925 ;;      Locals:         0       4       0       0       0
   926 ;;      Temps:          0       1       0       0       0
   927 ;;      Totals:         0       9       0       0       0
   928 ;;Total ram usage:        9 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 3
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_convertir
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938  00AF                     ___awdiv:	
   939                           ;psect for function ___awdiv
   940                           
   941  00AF                     l1039:	
   942                           ;incstack = 0
   943                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   944                           
   945  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   946  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   947  00B1  01A6               	clrf	___awdiv@sign
   948  00B2                     l1041:
   949  00B2  1FA1               	btfss	___awdiv@divisor+1,7
   950  00B3  28B5               	goto	u221
   951  00B4  28B6               	goto	u220
   952  00B5                     u221:
   953  00B5  28BD               	goto	l1047
   954  00B6                     u220:
   955  00B6                     l1043:
   956  00B6  09A0               	comf	___awdiv@divisor,f
   957  00B7  09A1               	comf	___awdiv@divisor+1,f
   958  00B8  0AA0               	incf	___awdiv@divisor,f
   959  00B9  1903               	skipnz
   960  00BA  0AA1               	incf	___awdiv@divisor+1,f
   961  00BB                     l1045:
   962  00BB  01A6               	clrf	___awdiv@sign
   963  00BC  0AA6               	incf	___awdiv@sign,f
   964  00BD                     l1047:
   965  00BD  1FA3               	btfss	___awdiv@dividend+1,7
   966  00BE  28C0               	goto	u231
   967  00BF  28C1               	goto	u230
   968  00C0                     u231:
   969  00C0  28CA               	goto	l1053
   970  00C1                     u230:
   971  00C1                     l1049:
   972  00C1  09A2               	comf	___awdiv@dividend,f
   973  00C2  09A3               	comf	___awdiv@dividend+1,f
   974  00C3  0AA2               	incf	___awdiv@dividend,f
   975  00C4  1903               	skipnz
   976  00C5  0AA3               	incf	___awdiv@dividend+1,f
   977  00C6                     l1051:
   978  00C6  3001               	movlw	1
   979  00C7  00A4               	movwf	??___awdiv
   980  00C8  0824               	movf	??___awdiv,w
   981  00C9  06A6               	xorwf	___awdiv@sign,f
   982  00CA                     l1053:
   983  00CA  01A7               	clrf	___awdiv@quotient
   984  00CB  01A8               	clrf	___awdiv@quotient+1
   985  00CC                     l1055:
   986  00CC  0820               	movf	___awdiv@divisor,w
   987  00CD  0421               	iorwf	___awdiv@divisor+1,w
   988  00CE  1903               	btfsc	3,2
   989  00CF  28D1               	goto	u241
   990  00D0  28D2               	goto	u240
   991  00D1                     u241:
   992  00D1  2909               	goto	l1075
   993  00D2                     u240:
   994  00D2                     l1057:
   995  00D2  01A5               	clrf	___awdiv@counter
   996  00D3  0AA5               	incf	___awdiv@counter,f
   997  00D4  28E0               	goto	l1063
   998  00D5                     l1059:
   999  00D5  3001               	movlw	1
  1000  00D6                     u255:
  1001  00D6  1003               	clrc
  1002  00D7  0DA0               	rlf	___awdiv@divisor,f
  1003  00D8  0DA1               	rlf	___awdiv@divisor+1,f
  1004  00D9  3EFF               	addlw	-1
  1005  00DA  1D03               	skipz
  1006  00DB  28D6               	goto	u255
  1007  00DC                     l1061:
  1008  00DC  3001               	movlw	1
  1009  00DD  00A4               	movwf	??___awdiv
  1010  00DE  0824               	movf	??___awdiv,w
  1011  00DF  07A5               	addwf	___awdiv@counter,f
  1012  00E0                     l1063:
  1013  00E0  1FA1               	btfss	___awdiv@divisor+1,7
  1014  00E1  28E3               	goto	u261
  1015  00E2  28E4               	goto	u260
  1016  00E3                     u261:
  1017  00E3  28D5               	goto	l1059
  1018  00E4                     u260:
  1019  00E4                     l1065:
  1020  00E4  3001               	movlw	1
  1021  00E5                     u275:
  1022  00E5  1003               	clrc
  1023  00E6  0DA7               	rlf	___awdiv@quotient,f
  1024  00E7  0DA8               	rlf	___awdiv@quotient+1,f
  1025  00E8  3EFF               	addlw	-1
  1026  00E9  1D03               	skipz
  1027  00EA  28E5               	goto	u275
  1028  00EB  0821               	movf	___awdiv@divisor+1,w
  1029  00EC  0223               	subwf	___awdiv@dividend+1,w
  1030  00ED  1D03               	skipz
  1031  00EE  28F1               	goto	u285
  1032  00EF  0820               	movf	___awdiv@divisor,w
  1033  00F0  0222               	subwf	___awdiv@dividend,w
  1034  00F1                     u285:
  1035  00F1  1C03               	skipc
  1036  00F2  28F4               	goto	u281
  1037  00F3  28F5               	goto	u280
  1038  00F4                     u281:
  1039  00F4  28FC               	goto	l1071
  1040  00F5                     u280:
  1041  00F5                     l1067:
  1042  00F5  0820               	movf	___awdiv@divisor,w
  1043  00F6  02A2               	subwf	___awdiv@dividend,f
  1044  00F7  0821               	movf	___awdiv@divisor+1,w
  1045  00F8  1C03               	skipc
  1046  00F9  03A3               	decf	___awdiv@dividend+1,f
  1047  00FA  02A3               	subwf	___awdiv@dividend+1,f
  1048  00FB                     l1069:
  1049  00FB  1427               	bsf	___awdiv@quotient,0
  1050  00FC                     l1071:
  1051  00FC  3001               	movlw	1
  1052  00FD                     u295:
  1053  00FD  1003               	clrc
  1054  00FE  0CA1               	rrf	___awdiv@divisor+1,f
  1055  00FF  0CA0               	rrf	___awdiv@divisor,f
  1056  0100  3EFF               	addlw	-1
  1057  0101  1D03               	skipz
  1058  0102  28FD               	goto	u295
  1059  0103                     l1073:
  1060  0103  3001               	movlw	1
  1061  0104  02A5               	subwf	___awdiv@counter,f
  1062  0105  1D03               	btfss	3,2
  1063  0106  2908               	goto	u301
  1064  0107  2909               	goto	u300
  1065  0108                     u301:
  1066  0108  28E4               	goto	l1065
  1067  0109                     u300:
  1068  0109                     l1075:
  1069  0109  0826               	movf	___awdiv@sign,w
  1070  010A  1903               	btfsc	3,2
  1071  010B  290D               	goto	u311
  1072  010C  290E               	goto	u310
  1073  010D                     u311:
  1074  010D  2913               	goto	l1079
  1075  010E                     u310:
  1076  010E                     l1077:
  1077  010E  09A7               	comf	___awdiv@quotient,f
  1078  010F  09A8               	comf	___awdiv@quotient+1,f
  1079  0110  0AA7               	incf	___awdiv@quotient,f
  1080  0111  1903               	skipnz
  1081  0112  0AA8               	incf	___awdiv@quotient+1,f
  1082  0113                     l1079:
  1083  0113  0828               	movf	___awdiv@quotient+1,w
  1084  0114  00A1               	movwf	?___awdiv+1
  1085  0115  0827               	movf	___awdiv@quotient,w
  1086  0116  00A0               	movwf	?___awdiv
  1087  0117                     l358:
  1088  0117  0008               	return
  1089  0118                     __end_of___awdiv:
  1090                           
  1091                           	psect	text5
  1092  023E                     __ptext5:	
  1093 ;; *************** function _isr *****************
  1094 ;; Defined at:
  1095 ;;		line 56 in file "mainlab8.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0
  1111 ;;      Temps:          4       0       0       0       0
  1112 ;;      Totals:         4       0       0       0       0
  1113 ;;Total ram usage:        4 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 2
  1116 ;; This function calls:
  1117 ;;		_multi
  1118 ;; This function is called by:
  1119 ;;		Interrupt level 1
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123  023E                     _isr:	
  1124                           ;psect for function _isr
  1125                           
  1126  023E                     i1l1167:
  1127                           
  1128                           ;mainlab8.c: 57:     if(PIR1bits.ADIF){
  1129  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1130  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0240  1F0C               	btfss	12,6	;volatile
  1132  0241  2A43               	goto	u32_21
  1133  0242  2A44               	goto	u32_20
  1134  0243                     u32_21:
  1135  0243  2A6C               	goto	i1l72
  1136  0244                     u32_20:
  1137  0244                     i1l1169:
  1138                           
  1139                           ;mainlab8.c: 58:         if(ADCON0bits.CHS == 0){
  1140  0244  0C1F               	rrf	31,w	;volatile
  1141  0245  00F7               	movwf	??_isr
  1142  0246  0C77               	rrf	??_isr,w
  1143  0247  390F               	andlw	15
  1144  0248  3A00               	xorlw	0
  1145  0249  1D03               	skipz
  1146  024A  2A4C               	goto	u33_21
  1147  024B  2A4D               	goto	u33_20
  1148  024C                     u33_21:
  1149  024C  2A50               	goto	i1l1173
  1150  024D                     u33_20:
  1151  024D                     i1l1171:
  1152                           
  1153                           ;mainlab8.c: 59:             PORTC = ADRESH;
  1154  024D  081E               	movf	30,w	;volatile
  1155  024E  0087               	movwf	7	;volatile
  1156                           
  1157                           ;mainlab8.c: 61:         }
  1158  024F  2A5D               	goto	i1l1177
  1159  0250                     i1l1173:
  1160  0250  0C1F               	rrf	31,w	;volatile
  1161  0251  00F7               	movwf	??_isr
  1162  0252  0C77               	rrf	??_isr,w
  1163  0253  390F               	andlw	15
  1164  0254  3A01               	xorlw	1
  1165  0255  1D03               	skipz
  1166  0256  2A58               	goto	u34_21
  1167  0257  2A59               	goto	u34_20
  1168  0258                     u34_21:
  1169  0258  2A5D               	goto	i1l1177
  1170  0259                     u34_20:
  1171  0259                     i1l1175:
  1172                           
  1173                           ;mainlab8.c: 64:             numero = ADRESH;
  1174  0259  081E               	movf	30,w	;volatile
  1175  025A  00F7               	movwf	??_isr
  1176  025B  0877               	movf	??_isr,w
  1177  025C  00AD               	movwf	_numero
  1178  025D                     i1l1177:
  1179                           
  1180                           ;mainlab8.c: 66:         if(INTCONbits.T0IF){
  1181  025D  1D0B               	btfss	11,2	;volatile
  1182  025E  2A60               	goto	u35_21
  1183  025F  2A61               	goto	u35_20
  1184  0260                     u35_21:
  1185  0260  2A6B               	goto	i1l1185
  1186  0261                     u35_20:
  1187  0261                     i1l1179:
  1188                           
  1189                           ;mainlab8.c: 67:         multi();
  1190  0261  120A  118A  216D  120A  118A  	fcall	_multi
  1191  0266                     i1l1181:
  1192                           
  1193                           ;mainlab8.c: 68:         TMR0 = var_tmr0;
  1194  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0268  082F               	movf	_var_tmr0,w
  1197  0269  0081               	movwf	1	;volatile
  1198  026A                     i1l1183:
  1199                           
  1200                           ;mainlab8.c: 69:         INTCONbits.T0IF = 0;
  1201  026A  110B               	bcf	11,2	;volatile
  1202  026B                     i1l1185:
  1203                           
  1204                           ;mainlab8.c: 72:         PIR1bits.ADIF = 0;
  1205  026B  130C               	bcf	12,6	;volatile
  1206  026C                     i1l72:
  1207  026C  087A               	movf	??_isr+3,w
  1208  026D  008A               	movwf	10
  1209  026E  0879               	movf	??_isr+2,w
  1210  026F  0084               	movwf	4
  1211  0270  0E78               	swapf	??_isr+1,w
  1212  0271  0083               	movwf	3
  1213  0272  0EFE               	swapf	btemp,f
  1214  0273  0E7E               	swapf	btemp,w
  1215  0274  0009               	retfie
  1216  0275                     __end_of_isr:
  1217                           
  1218                           	psect	intentry
  1219  0004                     __pintentry:	
  1220                           ;incstack = 0
  1221                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1222                           
  1223  0004                     interrupt_function:
  1224  007E                     saved_w	set	btemp
  1225  0004  00FE               	movwf	btemp
  1226  0005  0E03               	swapf	3,w
  1227  0006  00F8               	movwf	??_isr+1
  1228  0007  0804               	movf	4,w
  1229  0008  00F9               	movwf	??_isr+2
  1230  0009  080A               	movf	10,w
  1231  000A  00FA               	movwf	??_isr+3
  1232  000B  120A  118A  2A3E   	ljmp	_isr
  1233                           
  1234                           	psect	text6
  1235  016D                     __ptext6:	
  1236 ;; *************** function _multi *****************
  1237 ;; Defined at:
  1238 ;;		line 148 in file "mainlab8.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0
  1254 ;;      Temps:          2       0       0       0       0
  1255 ;;      Totals:         2       0       0       0       0
  1256 ;;Total ram usage:        2 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; Hardware stack levels required when called: 1
  1259 ;; This function calls:
  1260 ;;		_Tabla
  1261 ;; This function is called by:
  1262 ;;		_isr
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266  016D                     _multi:	
  1267                           ;psect for function _multi
  1268                           
  1269  016D                     i1l1083:	
  1270                           ;incstack = 0
  1271                           ; Regs used in _multi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1272                           
  1273                           
  1274                           ;mainlab8.c: 149:     PORTE = 0;
  1275  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1276  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1277  016F  0189               	clrf	9	;volatile
  1278  0170                     i1l1085:
  1279                           
  1280                           ;mainlab8.c: 150:     bandera++;
  1281  0170  3001               	movlw	1
  1282  0171  00F5               	movwf	??_multi
  1283  0172  0875               	movf	??_multi,w
  1284  0173  07AE               	addwf	_bandera,f
  1285                           
  1286                           ;mainlab8.c: 151:     switch(bandera){
  1287  0174  29A9               	goto	i1l1113
  1288  0175                     i1l1087:
  1289                           
  1290                           ;mainlab8.c: 153:             PORTD = 0;
  1291  0175  0188               	clrf	8	;volatile
  1292  0176                     i1l1089:
  1293                           
  1294                           ;mainlab8.c: 154:             PORTE = 0b001;
  1295  0176  3001               	movlw	1
  1296  0177  0089               	movwf	9	;volatile
  1297  0178                     i1l1091:
  1298                           
  1299                           ;mainlab8.c: 155:             centenas = Tabla(centenas);
  1300  0178  087B               	movf	_centenas,w
  1301  0179  120A  118A  201D  120A  118A  	fcall	_Tabla
  1302  017E  00F5               	movwf	??_multi
  1303  017F  0875               	movf	??_multi,w
  1304  0180  00FB               	movwf	_centenas
  1305  0181                     i1l1093:
  1306                           
  1307                           ;mainlab8.c: 156:             PORTD = centenas;
  1308  0181  087B               	movf	_centenas,w
  1309  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0184  0088               	movwf	8	;volatile
  1312                           
  1313                           ;mainlab8.c: 157:             break;
  1314  0185  29BB               	goto	i1l95
  1315  0186                     i1l1095:
  1316                           
  1317                           ;mainlab8.c: 159:             PORTD = 0;
  1318  0186  0188               	clrf	8	;volatile
  1319  0187                     i1l1097:
  1320                           
  1321                           ;mainlab8.c: 160:             PORTE = 0b010;
  1322  0187  3002               	movlw	2
  1323  0188  0089               	movwf	9	;volatile
  1324  0189                     i1l1099:
  1325                           
  1326                           ;mainlab8.c: 161:             decenas = Tabla(decenas);
  1327  0189  087C               	movf	_decenas,w
  1328  018A  120A  118A  201D  120A  118A  	fcall	_Tabla
  1329  018F  00F5               	movwf	??_multi
  1330  0190  0875               	movf	??_multi,w
  1331  0191  00FC               	movwf	_decenas
  1332  0192                     i1l1101:
  1333                           
  1334                           ;mainlab8.c: 162:             PORTD = decenas;
  1335  0192  087C               	movf	_decenas,w
  1336  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0195  0088               	movwf	8	;volatile
  1339                           
  1340                           ;mainlab8.c: 163:             break;
  1341  0196  29BB               	goto	i1l95
  1342  0197                     i1l1103:
  1343                           
  1344                           ;mainlab8.c: 165:             PORTD = 0;
  1345  0197  0188               	clrf	8	;volatile
  1346  0198                     i1l1105:
  1347                           
  1348                           ;mainlab8.c: 166:             PORTE = 0b100;
  1349  0198  3004               	movlw	4
  1350  0199  0089               	movwf	9	;volatile
  1351  019A                     i1l1107:
  1352                           
  1353                           ;mainlab8.c: 167:             unidades = Tabla(unidades);
  1354  019A  087D               	movf	_unidades,w
  1355  019B  120A  118A  201D  120A  118A  	fcall	_Tabla
  1356  01A0  00F5               	movwf	??_multi
  1357  01A1  0875               	movf	??_multi,w
  1358  01A2  00FD               	movwf	_unidades
  1359  01A3                     i1l1109:
  1360                           
  1361                           ;mainlab8.c: 168:             PORTD= unidades;
  1362  01A3  087D               	movf	_unidades,w
  1363  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1364  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1365  01A6  0088               	movwf	8	;volatile
  1366  01A7                     i1l1111:
  1367                           
  1368                           ;mainlab8.c: 169:             bandera = 0;
  1369  01A7  01AE               	clrf	_bandera
  1370                           
  1371                           ;mainlab8.c: 170:     }
  1372  01A8  29BB               	goto	i1l95
  1373  01A9                     i1l1113:
  1374  01A9  082E               	movf	_bandera,w
  1375  01AA  00F5               	movwf	??_multi
  1376  01AB  01F6               	clrf	??_multi+1
  1377  01AC  1BF5               	btfsc	??_multi,7
  1378  01AD  03F6               	decf	??_multi+1,f
  1379                           
  1380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 1, Range of values is 0 to 0
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            4     3 (average)
  1386                           ; direct_byte           11     8 (fixed)
  1387                           ; jumptable            260     6 (fixed)
  1388                           ;	Chosen strategy is simple_byte
  1389  01AE  0876               	movf	??_multi+1,w
  1390  01AF  3A00               	xorlw	0	; case 0
  1391  01B0  1903               	skipnz
  1392  01B1  29B3               	goto	i1l1247
  1393  01B2  2997               	goto	i1l1103
  1394  01B3                     i1l1247:
  1395                           
  1396                           ; Switch size 1, requested type "simple"
  1397                           ; Number of cases is 2, Range of values is 1 to 2
  1398                           ; switch strategies available:
  1399                           ; Name         Instructions Cycles
  1400                           ; simple_byte            7     4 (average)
  1401                           ; direct_byte           17    11 (fixed)
  1402                           ; jumptable            263     9 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404  01B3  0875               	movf	??_multi,w
  1405  01B4  3A01               	xorlw	1	; case 1
  1406  01B5  1903               	skipnz
  1407  01B6  2975               	goto	i1l1087
  1408  01B7  3A03               	xorlw	3	; case 2
  1409  01B8  1903               	skipnz
  1410  01B9  2986               	goto	i1l1095
  1411  01BA  2997               	goto	i1l1103
  1412  01BB                     i1l95:
  1413  01BB  0008               	return
  1414  01BC                     __end_of_multi:
  1415                           
  1416                           	psect	text7
  1417  001D                     __ptext7:	
  1418 ;; *************** function _Tabla *****************
  1419 ;; Defined at:
  1420 ;;		line 173 in file "mainlab8.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  numero7         1    wreg     unsigned char 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  numero7         1    2[COMMON] unsigned char 
  1425 ;;  valor           1    4[COMMON] unsigned char 
  1426 ;;  seg             1    3[COMMON] unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      unsigned char 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         3       0       0       0       0
  1438 ;;      Temps:          2       0       0       0       0
  1439 ;;      Totals:         5       0       0       0       0
  1440 ;;Total ram usage:        5 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_multi
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449  001D                     _Tabla:	
  1450                           ;psect for function _Tabla
  1451                           
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _Tabla: [wreg-fsr0h+status,2+status,0]
  1455                           ;Tabla@numero7 stored from wreg
  1456  001D  00F2               	movwf	Tabla@numero7
  1457  001E                     i1l979:
  1458                           
  1459                           ;mainlab8.c: 177:     uint8_t valor, seg;;mainlab8.c: 178:     seg = numero7;
  1460  001E  0872               	movf	Tabla@numero7,w
  1461  001F  00F0               	movwf	??_Tabla
  1462  0020  0870               	movf	??_Tabla,w
  1463  0021  00F3               	movwf	Tabla@seg
  1464                           
  1465                           ;mainlab8.c: 180:     switch(seg){
  1466  0022  2873               	goto	i1l1015
  1467  0023                     i1l981:
  1468                           
  1469                           ;mainlab8.c: 182:             valor= 0b00111111;
  1470  0023  303F               	movlw	63
  1471  0024  00F0               	movwf	??_Tabla
  1472  0025  0870               	movf	??_Tabla,w
  1473  0026  00F4               	movwf	Tabla@valor
  1474                           
  1475                           ;mainlab8.c: 183:             break;
  1476  0027  28AD               	goto	i1l1017
  1477  0028                     i1l983:
  1478                           
  1479                           ;mainlab8.c: 185:             valor= 0b00000110;
  1480  0028  3006               	movlw	6
  1481  0029  00F0               	movwf	??_Tabla
  1482  002A  0870               	movf	??_Tabla,w
  1483  002B  00F4               	movwf	Tabla@valor
  1484                           
  1485                           ;mainlab8.c: 186:             break;
  1486  002C  28AD               	goto	i1l1017
  1487  002D                     i1l985:
  1488                           
  1489                           ;mainlab8.c: 188:             valor= 0b01011011;
  1490  002D  305B               	movlw	91
  1491  002E  00F0               	movwf	??_Tabla
  1492  002F  0870               	movf	??_Tabla,w
  1493  0030  00F4               	movwf	Tabla@valor
  1494                           
  1495                           ;mainlab8.c: 189:             break;
  1496  0031  28AD               	goto	i1l1017
  1497  0032                     i1l987:
  1498                           
  1499                           ;mainlab8.c: 191:             valor= 0b01001111;
  1500  0032  304F               	movlw	79
  1501  0033  00F0               	movwf	??_Tabla
  1502  0034  0870               	movf	??_Tabla,w
  1503  0035  00F4               	movwf	Tabla@valor
  1504                           
  1505                           ;mainlab8.c: 192:             break;
  1506  0036  28AD               	goto	i1l1017
  1507  0037                     i1l989:
  1508                           
  1509                           ;mainlab8.c: 194:             valor= 0b01100110;
  1510  0037  3066               	movlw	102
  1511  0038  00F0               	movwf	??_Tabla
  1512  0039  0870               	movf	??_Tabla,w
  1513  003A  00F4               	movwf	Tabla@valor
  1514                           
  1515                           ;mainlab8.c: 195:             break;
  1516  003B  28AD               	goto	i1l1017
  1517  003C                     i1l991:
  1518                           
  1519                           ;mainlab8.c: 197:             valor= 0b01101101;
  1520  003C  306D               	movlw	109
  1521  003D  00F0               	movwf	??_Tabla
  1522  003E  0870               	movf	??_Tabla,w
  1523  003F  00F4               	movwf	Tabla@valor
  1524                           
  1525                           ;mainlab8.c: 198:             break;
  1526  0040  28AD               	goto	i1l1017
  1527  0041                     i1l993:
  1528                           
  1529                           ;mainlab8.c: 200:             valor= 0b01111101;
  1530  0041  307D               	movlw	125
  1531  0042  00F0               	movwf	??_Tabla
  1532  0043  0870               	movf	??_Tabla,w
  1533  0044  00F4               	movwf	Tabla@valor
  1534                           
  1535                           ;mainlab8.c: 201:             break;
  1536  0045  28AD               	goto	i1l1017
  1537  0046                     i1l995:
  1538                           
  1539                           ;mainlab8.c: 203:             valor= 0b00000111;
  1540  0046  3007               	movlw	7
  1541  0047  00F0               	movwf	??_Tabla
  1542  0048  0870               	movf	??_Tabla,w
  1543  0049  00F4               	movwf	Tabla@valor
  1544                           
  1545                           ;mainlab8.c: 204:             break;
  1546  004A  28AD               	goto	i1l1017
  1547  004B                     i1l997:
  1548                           
  1549                           ;mainlab8.c: 206:             valor= 0b01111111;
  1550  004B  307F               	movlw	127
  1551  004C  00F0               	movwf	??_Tabla
  1552  004D  0870               	movf	??_Tabla,w
  1553  004E  00F4               	movwf	Tabla@valor
  1554                           
  1555                           ;mainlab8.c: 207:             break;
  1556  004F  28AD               	goto	i1l1017
  1557  0050                     i1l999:
  1558                           
  1559                           ;mainlab8.c: 209:             valor= 0b01101111;
  1560  0050  306F               	movlw	111
  1561  0051  00F0               	movwf	??_Tabla
  1562  0052  0870               	movf	??_Tabla,w
  1563  0053  00F4               	movwf	Tabla@valor
  1564                           
  1565                           ;mainlab8.c: 210:             break;
  1566  0054  28AD               	goto	i1l1017
  1567  0055                     i1l1001:
  1568                           
  1569                           ;mainlab8.c: 212:             valor= 0b01110111;
  1570  0055  3077               	movlw	119
  1571  0056  00F0               	movwf	??_Tabla
  1572  0057  0870               	movf	??_Tabla,w
  1573  0058  00F4               	movwf	Tabla@valor
  1574                           
  1575                           ;mainlab8.c: 213:             break;
  1576  0059  28AD               	goto	i1l1017
  1577  005A                     i1l1003:
  1578                           
  1579                           ;mainlab8.c: 215:             valor= 0b01111100;
  1580  005A  307C               	movlw	124
  1581  005B  00F0               	movwf	??_Tabla
  1582  005C  0870               	movf	??_Tabla,w
  1583  005D  00F4               	movwf	Tabla@valor
  1584                           
  1585                           ;mainlab8.c: 216:             break;
  1586  005E  28AD               	goto	i1l1017
  1587  005F                     i1l1005:
  1588                           
  1589                           ;mainlab8.c: 218:             valor= 0b00111001;
  1590  005F  3039               	movlw	57
  1591  0060  00F0               	movwf	??_Tabla
  1592  0061  0870               	movf	??_Tabla,w
  1593  0062  00F4               	movwf	Tabla@valor
  1594                           
  1595                           ;mainlab8.c: 219:             break;
  1596  0063  28AD               	goto	i1l1017
  1597  0064                     i1l1007:
  1598                           
  1599                           ;mainlab8.c: 221:             valor= 0b01011110;
  1600  0064  305E               	movlw	94
  1601  0065  00F0               	movwf	??_Tabla
  1602  0066  0870               	movf	??_Tabla,w
  1603  0067  00F4               	movwf	Tabla@valor
  1604                           
  1605                           ;mainlab8.c: 222:             break;
  1606  0068  28AD               	goto	i1l1017
  1607  0069                     i1l1009:
  1608                           
  1609                           ;mainlab8.c: 224:             valor= 0b01111001;
  1610  0069  3079               	movlw	121
  1611  006A  00F0               	movwf	??_Tabla
  1612  006B  0870               	movf	??_Tabla,w
  1613  006C  00F4               	movwf	Tabla@valor
  1614                           
  1615                           ;mainlab8.c: 225:             break;
  1616  006D  28AD               	goto	i1l1017
  1617  006E                     i1l1011:
  1618                           
  1619                           ;mainlab8.c: 227:             valor= 0b01110001;
  1620  006E  3071               	movlw	113
  1621  006F  00F0               	movwf	??_Tabla
  1622  0070  0870               	movf	??_Tabla,w
  1623  0071  00F4               	movwf	Tabla@valor
  1624                           
  1625                           ;mainlab8.c: 228:             break;
  1626  0072  28AD               	goto	i1l1017
  1627  0073                     i1l1015:
  1628  0073  0873               	movf	Tabla@seg,w
  1629  0074  00F0               	movwf	??_Tabla
  1630  0075  01F1               	clrf	??_Tabla+1
  1631                           
  1632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 1, Range of values is 0 to 0
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte            4     3 (average)
  1638                           ; direct_byte           11     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641  0076  0871               	movf	??_Tabla+1,w
  1642  0077  3A00               	xorlw	0	; case 0
  1643  0078  1903               	skipnz
  1644  0079  287B               	goto	i1l1249
  1645  007A  28AD               	goto	i1l1017
  1646  007B                     i1l1249:
  1647                           
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 16, Range of values is 0 to 15
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte           49    25 (average)
  1653                           ; direct_byte           56     8 (fixed)
  1654                           ; jumptable            260     6 (fixed)
  1655                           ;	Chosen strategy is simple_byte
  1656  007B  0870               	movf	??_Tabla,w
  1657  007C  3A00               	xorlw	0	; case 0
  1658  007D  1903               	skipnz
  1659  007E  2823               	goto	i1l981
  1660  007F  3A01               	xorlw	1	; case 1
  1661  0080  1903               	skipnz
  1662  0081  2828               	goto	i1l983
  1663  0082  3A03               	xorlw	3	; case 2
  1664  0083  1903               	skipnz
  1665  0084  282D               	goto	i1l985
  1666  0085  3A01               	xorlw	1	; case 3
  1667  0086  1903               	skipnz
  1668  0087  2832               	goto	i1l987
  1669  0088  3A07               	xorlw	7	; case 4
  1670  0089  1903               	skipnz
  1671  008A  2837               	goto	i1l989
  1672  008B  3A01               	xorlw	1	; case 5
  1673  008C  1903               	skipnz
  1674  008D  283C               	goto	i1l991
  1675  008E  3A03               	xorlw	3	; case 6
  1676  008F  1903               	skipnz
  1677  0090  2841               	goto	i1l993
  1678  0091  3A01               	xorlw	1	; case 7
  1679  0092  1903               	skipnz
  1680  0093  2846               	goto	i1l995
  1681  0094  3A0F               	xorlw	15	; case 8
  1682  0095  1903               	skipnz
  1683  0096  284B               	goto	i1l997
  1684  0097  3A01               	xorlw	1	; case 9
  1685  0098  1903               	skipnz
  1686  0099  2850               	goto	i1l999
  1687  009A  3A03               	xorlw	3	; case 10
  1688  009B  1903               	skipnz
  1689  009C  2855               	goto	i1l1001
  1690  009D  3A01               	xorlw	1	; case 11
  1691  009E  1903               	skipnz
  1692  009F  285A               	goto	i1l1003
  1693  00A0  3A07               	xorlw	7	; case 12
  1694  00A1  1903               	skipnz
  1695  00A2  285F               	goto	i1l1005
  1696  00A3  3A01               	xorlw	1	; case 13
  1697  00A4  1903               	skipnz
  1698  00A5  2864               	goto	i1l1007
  1699  00A6  3A03               	xorlw	3	; case 14
  1700  00A7  1903               	skipnz
  1701  00A8  2869               	goto	i1l1009
  1702  00A9  3A01               	xorlw	1	; case 15
  1703  00AA  1903               	skipnz
  1704  00AB  286E               	goto	i1l1011
  1705  00AC  28AD               	goto	i1l1017
  1706  00AD                     i1l1017:
  1707                           
  1708                           ;mainlab8.c: 230:     return valor;
  1709  00AD  0874               	movf	Tabla@valor,w
  1710  00AE                     i1l116:
  1711  00AE  0008               	return
  1712  00AF                     __end_of_Tabla:
  1713  007E                     btemp	set	126	;btemp
  1714  007E                     wtemp0	set	126
  1715                           
  1716                           	psect	idloc
  1717                           
  1718                           ;Config register IDLOC0 @ 0x2000
  1719                           ;	unspecified, using default values
  1720  2000                     	org	8192
  1721  2000  3FFF               	dw	16383
  1722                           
  1723                           ;Config register IDLOC1 @ 0x2001
  1724                           ;	unspecified, using default values
  1725  2001                     	org	8193
  1726  2001  3FFF               	dw	16383
  1727                           
  1728                           ;Config register IDLOC2 @ 0x2002
  1729                           ;	unspecified, using default values
  1730  2002                     	org	8194
  1731  2002  3FFF               	dw	16383
  1732                           
  1733                           ;Config register IDLOC3 @ 0x2003
  1734                           ;	unspecified, using default values
  1735  2003                     	org	8195
  1736  2003  3FFF               	dw	16383
  1737                           
  1738                           	psect	config
  1739                           
  1740                           ;Config register CONFIG1 @ 0x2007
  1741                           ;	Oscillator Selection bits
  1742                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1743                           ;	Watchdog Timer Enable bit
  1744                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1745                           ;	Power-up Timer Enable bit
  1746                           ;	PWRTE = OFF, PWRT disabled
  1747                           ;	RE3/MCLR pin function select bit
  1748                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1749                           ;	Code Protection bit
  1750                           ;	CP = OFF, Program memory code protection is disabled
  1751                           ;	Data Code Protection bit
  1752                           ;	CPD = OFF, Data memory code protection is disabled
  1753                           ;	Brown Out Reset Selection bits
  1754                           ;	BOREN = OFF, BOR disabled
  1755                           ;	Internal External Switchover bit
  1756                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1757                           ;	Fail-Safe Clock Monitor Enabled bit
  1758                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1759                           ;	Low Voltage Programming Enable bit
  1760                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1761                           ;	In-Circuit Debugger Mode bit
  1762                           ;	DEBUG = 0x1, unprogrammed default
  1763  2007                     	org	8199
  1764  2007  20D4               	dw	8404
  1765                           
  1766                           ;Config register CONFIG2 @ 0x2008
  1767                           ;	Brown-out Reset Selection bit
  1768                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1769                           ;	Flash Program Memory Self Write Enable bits
  1770                           ;	WRT = OFF, Write protection off
  1771  2008                     	org	8200
  1772  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     12      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_multi
    _multi->_Tabla

Critical Paths under _main in BANK0

    _main->_convertir
    _convertir->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     848
                                             11 BANK0      1     1      0
                          _convertir
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _convertir                                            2     2      0     848
                                              9 BANK0      2     2      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      83
                                              7 COMMON     4     4      0
                              _multi
 ---------------------------------------------------------------------------------
 (4) _multi                                                2     2      0      83
                                              5 COMMON     2     2      0
                              _Tabla
 ---------------------------------------------------------------------------------
 (5) _Tabla                                                5     5      0      83
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _convertir
     ___awdiv
     ___bmul
   _setup

 _isr (ROOT)
   _multi
     _Tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 23 15:49:10 2022

         ___bmul@product 0022                       l87 016C             ___awdiv@sign 0026  
                    l231 028B                      l119 0206                      l358 0117  
                    u200 027D                      u201 027C                      u210 028A  
                    u211 0289                      u300 0109                      u220 00B6  
                    u301 0108                      u221 00B5                      u310 010E  
                    u230 00C1                      u311 010D                      u231 00C0  
                    u240 00D2                      u241 00D1                      u260 00E4  
                    u261 00E3                      u255 00D6                      u407 0157  
                    u280 00F5                      u360 0212                      u281 00F4  
                    u361 0211                      u370 021B                      u275 00E5  
                    u371 021A                      u380 0229                      u285 00F1  
                    u381 0228                      u295 00FD                      u397 022F  
                    _isr 023E                      fsr0 0004                     l1031 0281  
                   l1041 00B2                     l1033 0283                     l1025 0278  
                   l1121 0122                     l1201 022B                     l1051 00C6  
                   l1043 00B6                     l1035 028A                     l1027 0279  
                   l1131 0145                     l1123 0123                     l1203 0232  
                   l1061 00DC                     l1053 00CA                     l1045 00BB  
                   l1029 027D                     l1141 0153                     l1133 0148  
                   l1125 0138                     l1205 0235                     l1071 00FC  
                   l1063 00E0                     l1055 00CC                     l1047 00BD  
                   l1039 00AF                     l1151 0162                     l1143 015A  
                   l1135 0149                     l1127 013E                     l1119 0118  
                   l1073 0103                     l1065 00E4                     l1057 00D2  
                   l1049 00C1                     l1161 0167                     l1153 0163  
                   l1145 015D                     l1137 014D                     l1129 013F  
                   l1067 00F5                     l1059 00D5                     l1075 0109  
                   l1163 0168                     l1155 0164                     l1147 0160  
                   l1139 0150                     l1077 010E                     l1069 00FB  
                   l1165 01BC                     l1157 0165                     l1149 0161  
                   l1079 0113                     l1159 0166                     l1191 020C  
                   l1193 0212                     l1195 021B                     l1197 0220  
                   l1189 0207                     l1199 0229                     ?_isr 0070  
                   i1l72 026C                     i1l95 01BB                     _TMR0 0001  
                   _main 0207                     btemp 007E                     start 000E  
      ___bmul@multiplier 0023                    ??_isr 0077               Tabla@valor 0074  
                  ?_main 0070          __end_of___awdiv 0118                    _ANSEL 0188  
        ___awdiv@divisor 0020                    i1l116 00AE                    i1l981 0023  
                  i1l991 003C                    i1l983 0028                    i1l993 0041  
                  i1l985 002D                    i1l995 0046                    i1l987 0032  
                  i1l979 001E                    i1l997 004B                    i1l989 0037  
                  i1l999 0050          ___awdiv@counter 0025                    u32_20 0244  
                  u32_21 0243                    u33_20 024D                    u33_21 024C  
                  u34_20 0259                    u34_21 0258                    u35_20 0261  
                  u35_21 0260                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _Tabla 001D                    _multi 016D                    _setup 0118  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 023E                   ??_main 002B  
                 ?_Tabla 0070                   _ADRESH 001E         ___awdiv@dividend 0022  
                 ?_multi 0070                   ?_setup 0070                   _ANSELH 0189  
                 i1l1001 0055                   i1l1011 006E                   i1l1003 005A  
                 i1l1005 005F                   i1l1101 0192                   i1l1007 0064  
                 i1l1015 0073                   i1l1111 01A7                   i1l1103 0197  
                 i1l1009 0069                   i1l1017 00AD                   i1l1105 0198  
                 i1l1113 01A9                   i1l1107 019A                   i1l1109 01A3  
                 i1l1091 0178                   i1l1083 016D                   i1l1171 024D  
                 i1l1093 0181                   i1l1085 0170                   i1l1181 0266  
                 i1l1173 0250                   i1l1247 01B3                   i1l1095 0186  
                 i1l1087 0175                   i1l1183 026A                   i1l1175 0259  
                 i1l1167 023E                   i1l1249 007B                   i1l1097 0187  
                 i1l1089 0176                   i1l1185 026B                   i1l1177 025D  
                 i1l1169 0244                   i1l1099 0189                   i1l1179 0261  
                 ___bmul 0275                ??___awdiv 0024         ___awdiv@quotient 0027  
                 _numero 002D                   saved_w 007E  __end_of__initialization 0019  
    ___bmul@multiplicand 0020            __end_of_Tabla 00AF           __pcstackCOMMON 0070  
          __end_of_multi 01BC            __end_of_setup 016D           _OPTION_REGbits 0081  
                ??_Tabla 0070                  ??_multi 0075                  ??_setup 0020  
             __pbssBANK0 002C             Tabla@numero7 0072               __pmaintext 0207  
                ?___bmul 0020               __pintentry 0004                  ___awdiv 00AF  
                _bandera 002E        __end_of_convertir 0207                  _decenas 007C  
                __ptext1 0118                  __ptext2 01BC                  __ptext3 0275  
                __ptext4 00AF                  __ptext5 023E                  __ptext6 016D  
                __ptext7 001D     end_of_initialization 0019           __end_of___bmul 028C  
    start_initialization 0011              __end_of_isr 0275                 ??___bmul 0021  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0020  
              __pnvBANK0 002F                 ?___awdiv 0020                _convertir 01BC  
      interrupt_function 0004                 _PIE1bits 008C                _operacion 002C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
             ?_convertir 0070                 Tabla@seg 0073                 _centenas 007B  
               _var_tmr0 002F                 _unidades 007D              ??_convertir 0029  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
